name: Golden Image Build

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
      uses: docker/login-action@v1.14.1
      with:
        # registry: # optional
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
        # ecr: # optional, default is auto
        logout: true

    - name: Build and push Docker images
      if: "!startsWith(github.ref, 'refs/tags/')"
      uses: docker/build-push-action@v2.10.0
      with:
        file: Dockerfile # optional
        labels: golden-image # optional
        pull: true # optional, default is false
        push: false # optional, default is false
        tags: ddpana/golden-image:latest,ddpana/golden-image:${{ github.ref_name }}

    - name: Build and push Docker images
      if: startsWith(github.ref, 'refs/tags/')
      uses: docker/build-push-action@v2.10.0
      with:
        file: Dockerfile # optional
        labels: golden-image # optional
        pull: true # optional, default is false
        push: true # optional, default is false
        tags: ddpana/golden-image:latest,ddpana/golden-image:${{ github.ref_name }}

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: ./my-artifact.zip
    #     asset_name: my-artifact.zip
    #     asset_content_type: application/zip